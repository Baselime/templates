dynamodb-slow-put-item-requests:
  type: query
  properties:
    description: Tables with the slowest PutItem requests
    parameters:
      datasets:
        - cloudwatch-metrics
      calculations:
        - MAX(value.max) as Latency
      filters:
        - dimensions.Operation = PutItem
        - $baselime.namespace = AWS/DynamoDB
        - metric_name = SuccessfulRequestLatency
      groupBy:
        type: string
        value: dimensions.TableName
        limit: 10
        orderBy: Latency
        order: DESC


dynamodb-slow-get-item-requests:
  type: query
  properties:
    name: "Slow Get Item Requests"
    description: The {{ limit }} slowest Put Item requests Grouped By Table
    parameters:
      datasets:
        - cloudwatch-metrics
      calculations:
        - MAX(value.max)
      filters:
        - dimensions.Operation = GetItem
        - $baselime.namespace = AWS/DynamoDB
      groupBy:
        type: string
        value: dimensions.TableName
        limit: 10
        orderBy: MAX(value.max)
        order: DESC


dynamodb-slow-update-item-requests:
  type: query
  properties:
    name: "Slow Update Item Requests"
    description: The {{ limit }} slowest Update Item requests Grouped By Table
    parameters:
      datasets:
        - cloudwatch-metrics
      calculations:
        - MAX(value.max)
      filters:
        - dimensions.Operation = UpdateItem
        - $baselime.namespace = AWS/DynamoDB
      groupBy:
        type: string
        value: dimensions.TableName
        limit: 10
        orderBy: MAX(value.max)
        order: DESC

dynamodb-slow-delete-item-requests:
  type: query
  properties:
    name: "Slow Delete Item Requests"
    description: The {{ limit }} slowest Delete Item requests Grouped By Table
    parameters:
      datasets:
        - cloudwatch-metrics
      calculations:
        - MAX(value.max)
      filters:
        - dimensions.Operation = DeleteItem
        - $baselime.namespace = AWS/DynamoDB
      groupBy:
        type: string
        value: dimensions.TableName
        limit: 10
        orderBy: MAX(value.max)
        order: DESC
        
dynamodb-slow-queries:
  type: query
  properties:
    name: Query Requests
    description: The {{ limit }} slowest Query requests Grouped By Table
    parameters:
      datasets:
        - cloudwatch-metrics
      calculations:
        - MAX(value.max)
      filters:
        - $baselime.namespace = AWS/DynamoDB
        - dimensions.Operation = Query
      groupBy:
        type: string
        value: dimensions.TableName
        limit: 10
        orderBy: MAX(value.max)
        order: DESC

